from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Load data
data = pd.read_csv('D:test.csv')
train_input = np.array(data.x[0:200]).reshape(200, 1)
train_output = np.array(data.y[0:200]).reshape(200, 1)
test_input = np.array(data.x[200:299]).reshape(99, 1)
test_output = np.array(data.y[200:299]).reshape(99, 1)

# Polynomial Regression
poly_regressor = PolynomialFeatures(degree=2)
train_input_poly = poly_regressor.fit_transform(train_input)
test_input_poly = poly_regressor.transform(test_input)

linear_regressor = LinearRegression()
linear_regressor.fit(train_input_poly, train_output)

# Predictions
predicted_value_train = linear_regressor.predict(train_input_poly)
predicted_value_test = linear_regressor.predict(test_input_poly)

# Mean Squared Error Calculation
error_train = mean_squared_error(train_output, predicted_value_train)
error_test = mean_squared_error(test_output, predicted_value_test)

print("Predicted Values on Training Data:\n", predicted_value_train)
print("Predicted Values on Test Data:\n", predicted_value_test)
print("Mean Squared Error on Training Data:", error_train)
print("Mean Squared Error on Test Data:", error_test)

plt.plot(test_input,test_output,'+',color="green")
plt.plot(test_input,predicted_value_test,"*",color="red")
plt.title("Poly Graph")
plt.xlabel("input")
plt.ylabel("output")
plt.show()
